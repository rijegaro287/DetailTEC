/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
var GtCheckboxComponent = /** @class */ (function () {
    function GtCheckboxComponent() {
        this.class = 'd-flex justify-content-end';
        this.changed = new EventEmitter();
    }
    Object.defineProperty(GtCheckboxComponent.prototype, "initialValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._initialValue;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._initialValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GtCheckboxComponent.prototype, "checked", {
        get: /**
         * @return {?}
         */
        function () {
            return this._checked;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._checked = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    GtCheckboxComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} checked
     * @return {?}
     */
    GtCheckboxComponent.prototype.toggle = /**
     * @param {?} checked
     * @return {?}
     */
    function (checked) {
        this.changed.emit(this.checked);
    };
    GtCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'gt-checkbox',
                    template: "\n    <label class=\"custom-control custom-checkbox p-0\" (click)=\"$event.stopPropagation()\">\n      <input #checkbox type=\"checkbox\" class=\"custom-control-input\" [(checked)]=\"checked\" (change)=\"toggle($event);\">\n      <span class=\"custom-control-label\"></span>\n    </label>\n  ",
                    styles: []
                },] },
    ];
    /** @nocollapse */
    GtCheckboxComponent.ctorParameters = function () { return []; };
    GtCheckboxComponent.propDecorators = {
        "class": [{ type: HostBinding, args: ['class',] },],
        "initialValue": [{ type: Input },],
        "checked": [{ type: Input },],
        "changed": [{ type: Output },],
    };
    return GtCheckboxComponent;
}());
export { GtCheckboxComponent };
function GtCheckboxComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtCheckboxComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtCheckboxComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    GtCheckboxComponent.propDecorators;
    /** @type {?} */
    GtCheckboxComponent.prototype.class;
    /** @type {?} */
    GtCheckboxComponent.prototype._checked;
    /** @type {?} */
    GtCheckboxComponent.prototype._initialValue;
    /** @type {?} */
    GtCheckboxComponent.prototype.changed;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtY2hlY2tib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFuZ3VsYXItZ2VuZXJpYy10YWJsZS9jb3JlLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9ndC1jaGVja2JveC9ndC1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBRUwsTUFBTSxFQUNOLE1BQU0sZUFBZSxDQUFDOztJQW9DdEI7cUJBbkI4Qiw0QkFBNEI7dUJBaUJmLElBQUksWUFBWSxFQUFFO0tBRTdDO0lBdkJoQixzQkFBSSw2Q0FBWTs7OztRQUFoQjtZQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1NBQzFCOzs7OztrQkFLZ0IsS0FBYztZQUM5QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQzs7OztPQU4zQjtJQVFELHNCQUFJLHdDQUFPOzs7O1FBQVg7WUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNyQjs7Ozs7a0JBR1csS0FBYztZQUN6QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQzs7OztPQUp0Qjs7OztJQWFELHNDQUFROzs7SUFBUixlQUFhOzs7OztJQUViLG9DQUFNOzs7O0lBQU4sVUFBTyxPQUFnQjtRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDaEM7O2dCQXhDRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSxzU0FLUjtvQkFDRixNQUFNLEVBQUUsRUFBRTtpQkFDVjs7Ozs7MEJBTUMsV0FBVyxTQUFDLE9BQU87aUNBRW5CLEtBQUs7NEJBUUwsS0FBSzs0QkFPTCxNQUFNOzs4QkF6Q1I7O1NBbUJhLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0RXZlbnRFbWl0dGVyLFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXQsXG5cdE9uSW5pdCxcblx0T3V0cHV0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdndC1jaGVja2JveCcsXG5cdHRlbXBsYXRlOiBgXG4gICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLWNoZWNrYm94IHAtMFwiIChjbGljayk9XCIkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKClcIj5cbiAgICAgIDxpbnB1dCAjY2hlY2tib3ggdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJjdXN0b20tY29udHJvbC1pbnB1dFwiIFsoY2hlY2tlZCldPVwiY2hlY2tlZFwiIChjaGFuZ2UpPVwidG9nZ2xlKCRldmVudCk7XCI+XG4gICAgICA8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWxhYmVsXCI+PC9zcGFuPlxuICAgIDwvbGFiZWw+XG4gIGAsXG5cdHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgR3RDaGVja2JveENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cdGdldCBpbml0aWFsVmFsdWUoKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuX2luaXRpYWxWYWx1ZTtcblx0fVxuXG5cdEBIb3N0QmluZGluZygnY2xhc3MnKSBjbGFzcyA9ICdkLWZsZXgganVzdGlmeS1jb250ZW50LWVuZCc7XG5cblx0QElucHV0KClcblx0c2V0IGluaXRpYWxWYWx1ZSh2YWx1ZTogYm9vbGVhbikge1xuXHRcdHRoaXMuX2luaXRpYWxWYWx1ZSA9IHZhbHVlO1xuXHR9XG5cdGdldCBjaGVja2VkKCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLl9jaGVja2VkO1xuXHR9XG5cblx0QElucHV0KClcblx0c2V0IGNoZWNrZWQodmFsdWU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9jaGVja2VkID0gdmFsdWU7XG5cdH1cblxuXHRwcml2YXRlIF9jaGVja2VkOiBib29sZWFuO1xuXHRwcml2YXRlIF9pbml0aWFsVmFsdWU6IGJvb2xlYW47XG5cdEBPdXRwdXQoKSBjaGFuZ2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblx0Y29uc3RydWN0b3IoKSB7fVxuXG5cdG5nT25Jbml0KCkge31cblxuXHR0b2dnbGUoY2hlY2tlZDogYm9vbGVhbikge1xuXHRcdHRoaXMuY2hhbmdlZC5lbWl0KHRoaXMuY2hlY2tlZCk7XG5cdH1cbn1cbiJdfQ==