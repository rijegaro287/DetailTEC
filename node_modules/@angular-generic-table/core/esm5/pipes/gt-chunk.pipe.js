/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
var GtChunkPipe = /** @class */ (function () {
    function GtChunkPipe() {
    }
    /**
     * @param {?} array
     * @param {?} gtInfo
     * @param {?} chunkSize
     * @param {?} page
     * @param {?} refreshPageArray
     * @param {?} refreshData
     * @param {?} gtEvent
     * @param {?} data
     * @return {?}
     */
    GtChunkPipe.prototype.transform = /**
     * @param {?} array
     * @param {?} gtInfo
     * @param {?} chunkSize
     * @param {?} page
     * @param {?} refreshPageArray
     * @param {?} refreshData
     * @param {?} gtEvent
     * @param {?} data
     * @return {?}
     */
    function (array, gtInfo, chunkSize, page, refreshPageArray, refreshData, gtEvent, data) {
        if (!Array.isArray(array)) {
            return array;
        }
        data.exportData = array; // store data for export
        var /** @type {?} */ PAGES = [];
        var /** @type {?} */ ENTRIES = array.length;
        for (var /** @type {?} */ i = 0; i < ENTRIES; i += chunkSize) {
            PAGES.push(array.slice(i, i + chunkSize));
        }
        gtInfo.visibleRecords = !PAGES[page - 1] ? [] : tslib_1.__spread(PAGES[page - 1]); // add visible rows
        gtInfo.pageTotal = PAGES.length; // add number of pages
        setTimeout(function () {
            return gtEvent.emit({
                name: 'gt-info',
                value: gtInfo
            });
        }, 0);
        return PAGES[page - 1];
    };
    GtChunkPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'gtChunk'
                },] },
    ];
    return GtChunkPipe;
}());
export { GtChunkPipe };
function GtChunkPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtChunkPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtChunkPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtY2h1bmsucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bhbmd1bGFyLWdlbmVyaWMtdGFibGUvY29yZS8iLCJzb3VyY2VzIjpbInBpcGVzL2d0LWNodW5rLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUErQixNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0lBT2pFLCtCQUFTOzs7Ozs7Ozs7OztJQUFULFVBQ0MsS0FBWSxFQUNaLE1BQXFCLEVBQ3JCLFNBQWlCLEVBQ2pCLElBQVksRUFDWixnQkFBeUIsRUFDekIsV0FBbUIsRUFDbkIsT0FBOEIsRUFDOUIsSUFBZ0M7UUFFaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQixNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUV4QixxQkFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLHFCQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBRTdCLEdBQUcsQ0FBQyxDQUFDLHFCQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sRUFBRSxDQUFDLElBQUksU0FBUyxFQUFFLENBQUM7WUFDN0MsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUMxQztRQUNELE1BQU0sQ0FBQyxjQUFjLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxrQkFBSyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckUsTUFBTSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBRWhDLFVBQVUsQ0FDVDtZQUNDLE9BQUEsT0FBTyxDQUFDLElBQUksQ0FBQztnQkFDWixJQUFJLEVBQUUsU0FBUztnQkFDZixLQUFLLEVBQUUsTUFBTTthQUNiLENBQUM7UUFIRixDQUdFLEVBQ0gsQ0FBQyxDQUNELENBQUM7UUFDRixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztLQUN2Qjs7Z0JBckNELElBQUksU0FBQztvQkFDTCxJQUFJLEVBQUUsU0FBUztpQkFDZjs7c0JBTEQ7O1NBTWEsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3RJbmZvcm1hdGlvbiwgR3RFdmVudCB9IGZyb20gJy4uJztcblxuQFBpcGUoe1xuXHRuYW1lOiAnZ3RDaHVuaydcbn0pXG5leHBvcnQgY2xhc3MgR3RDaHVua1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0dHJhbnNmb3JtKFxuXHRcdGFycmF5OiBhbnlbXSxcblx0XHRndEluZm86IEd0SW5mb3JtYXRpb24sXG5cdFx0Y2h1bmtTaXplOiBudW1iZXIsXG5cdFx0cGFnZTogbnVtYmVyLFxuXHRcdHJlZnJlc2hQYWdlQXJyYXk6IGJvb2xlYW4sXG5cdFx0cmVmcmVzaERhdGE6IG51bWJlcixcblx0XHRndEV2ZW50OiBFdmVudEVtaXR0ZXI8R3RFdmVudD4sXG5cdFx0ZGF0YTogeyBleHBvcnREYXRhOiBBcnJheTxhbnk+IH1cblx0KTogYW55W10ge1xuXHRcdGlmICghQXJyYXkuaXNBcnJheShhcnJheSkpIHtcblx0XHRcdHJldHVybiBhcnJheTtcblx0XHR9XG5cdFx0ZGF0YS5leHBvcnREYXRhID0gYXJyYXk7IC8vIHN0b3JlIGRhdGEgZm9yIGV4cG9ydFxuXG5cdFx0Y29uc3QgUEFHRVMgPSBbXTtcblx0XHRjb25zdCBFTlRSSUVTID0gYXJyYXkubGVuZ3RoO1xuXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBFTlRSSUVTOyBpICs9IGNodW5rU2l6ZSkge1xuXHRcdFx0UEFHRVMucHVzaChhcnJheS5zbGljZShpLCBpICsgY2h1bmtTaXplKSk7XG5cdFx0fVxuXHRcdGd0SW5mby52aXNpYmxlUmVjb3JkcyA9ICFQQUdFU1twYWdlIC0gMV0gPyBbXSA6IFsuLi5QQUdFU1twYWdlIC0gMV1dOyAvLyBhZGQgdmlzaWJsZSByb3dzXG5cdFx0Z3RJbmZvLnBhZ2VUb3RhbCA9IFBBR0VTLmxlbmd0aDsgLy8gYWRkIG51bWJlciBvZiBwYWdlc1xuXG5cdFx0c2V0VGltZW91dChcblx0XHRcdCgpID0+XG5cdFx0XHRcdGd0RXZlbnQuZW1pdCh7XG5cdFx0XHRcdFx0bmFtZTogJ2d0LWluZm8nLFxuXHRcdFx0XHRcdHZhbHVlOiBndEluZm9cblx0XHRcdFx0fSksXG5cdFx0XHQwXG5cdFx0KTtcblx0XHRyZXR1cm4gUEFHRVNbcGFnZSAtIDFdO1xuXHR9XG59XG4iXX0=