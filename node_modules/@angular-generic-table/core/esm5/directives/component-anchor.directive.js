/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ComponentFactoryResolver, Directive, EventEmitter, Injector, Input, Output, Type, ViewContainerRef } from '@angular/core';
/**
 * @template C
 */
var ComponentAnchorDirective = /** @class */ (function () {
    function ComponentAnchorDirective(componentFactoryResolver, viewContainer) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.viewContainer = viewContainer;
        this.instance = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ComponentAnchorDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ factory = this.componentFactoryResolver.resolveComponentFactory(this.ctor);
        var /** @type {?} */ component = this.viewContainer.createComponent(factory, 0, this.injector);
        this.instance.emit(component.instance);
    };
    ComponentAnchorDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[gtComponentAnchor]'
                },] },
    ];
    /** @nocollapse */
    ComponentAnchorDirective.ctorParameters = function () { return [
        { type: ComponentFactoryResolver, },
        { type: ViewContainerRef, },
    ]; };
    ComponentAnchorDirective.propDecorators = {
        "ctor": [{ type: Input },],
        "injector": [{ type: Input },],
        "instance": [{ type: Output },],
    };
    return ComponentAnchorDirective;
}());
export { ComponentAnchorDirective };
function ComponentAnchorDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ComponentAnchorDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ComponentAnchorDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    ComponentAnchorDirective.propDecorators;
    /** @type {?} */
    ComponentAnchorDirective.prototype.ctor;
    /** @type {?} */
    ComponentAnchorDirective.prototype.injector;
    /** @type {?} */
    ComponentAnchorDirective.prototype.instance;
    /** @type {?} */
    ComponentAnchorDirective.prototype.componentFactoryResolver;
    /** @type {?} */
    ComponentAnchorDirective.prototype.viewContainer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWFuY2hvci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1nZW5lcmljLXRhYmxlL2NvcmUvIiwic291cmNlcyI6WyJkaXJlY3RpdmVzL2NvbXBvbmVudC1hbmNob3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBRU4sd0JBQXdCLEVBRXhCLFNBQVMsRUFDVCxZQUFZLEVBQ1osUUFBUSxFQUNSLEtBQUssRUFFTCxNQUFNLEVBQ04sSUFBSSxFQUNKLGdCQUFnQixFQUNoQixNQUFNLGVBQWUsQ0FBQzs7Ozs7SUFVdEIsa0NBQ1MsMEJBQ0E7UUFEQSw2QkFBd0IsR0FBeEIsd0JBQXdCO1FBQ3hCLGtCQUFhLEdBQWIsYUFBYTt3QkFKZ0IsSUFBSSxZQUFZLEVBQUs7S0FLdkQ7Ozs7SUFFSiwyQ0FBUTs7O0lBQVI7UUFDQyxxQkFBTSxPQUFPLEdBRVQsSUFBSSxDQUFDLHdCQUF3QixDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRSxxQkFBTSxTQUFTLEdBQW9CLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUNwRSxPQUFPLEVBQ1AsQ0FBQyxFQUNELElBQUksQ0FBQyxRQUFRLENBQ2IsQ0FBQztRQUNGLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN2Qzs7Z0JBdkJELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUscUJBQXFCO2lCQUMvQjs7OztnQkFkQSx3QkFBd0I7Z0JBU3hCLGdCQUFnQjs7O3lCQU9mLEtBQUs7NkJBQ0wsS0FBSzs2QkFDTCxNQUFNOzttQ0FwQlI7O1NBaUJhLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudEZhY3RvcnksXG5cdENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcblx0Q29tcG9uZW50UmVmLFxuXHREaXJlY3RpdmUsXG5cdEV2ZW50RW1pdHRlcixcblx0SW5qZWN0b3IsXG5cdElucHV0LFxuXHRPbkluaXQsXG5cdE91dHB1dCxcblx0VHlwZSxcblx0Vmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2d0Q29tcG9uZW50QW5jaG9yXSdcbn0pXG5leHBvcnQgY2xhc3MgQ29tcG9uZW50QW5jaG9yRGlyZWN0aXZlPEM+IGltcGxlbWVudHMgT25Jbml0IHtcblx0QElucHV0KCkgY3RvcjogVHlwZTxDPjtcblx0QElucHV0KCkgaW5qZWN0b3I6IEluamVjdG9yO1xuXHRAT3V0cHV0KCkgaW5zdGFuY2U6IEV2ZW50RW1pdHRlcjxDPiA9IG5ldyBFdmVudEVtaXR0ZXI8Qz4oKTtcblxuXHRjb25zdHJ1Y3Rvcihcblx0XHRwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuXHRcdHByaXZhdGUgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZlxuXHQpIHt9XG5cblx0bmdPbkluaXQoKTogdm9pZCB7XG5cdFx0Y29uc3QgZmFjdG9yeTogQ29tcG9uZW50RmFjdG9yeTxcblx0XHRcdENcblx0XHQ+ID0gdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodGhpcy5jdG9yKTtcblx0XHRjb25zdCBjb21wb25lbnQ6IENvbXBvbmVudFJlZjxDPiA9IHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVDb21wb25lbnQoXG5cdFx0XHRmYWN0b3J5LFxuXHRcdFx0MCxcblx0XHRcdHRoaXMuaW5qZWN0b3Jcblx0XHQpO1xuXHRcdHRoaXMuaW5zdGFuY2UuZW1pdChjb21wb25lbnQuaW5zdGFuY2UpO1xuXHR9XG59XG4iXX0=