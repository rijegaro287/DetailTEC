/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { GenericTableComponent } from './components/generic-table.component';
import { GtRenderPipe } from './pipes/gt-render.pipe';
import { GtVisiblePipe } from './pipes/gt-visible.pipe';
import { DashCasePipe } from './pipes/dash-case.pipe';
import { GtPropertyPipe } from './pipes/gt-property.pipe';
import { GtChunkPipe } from './pipes/gt-chunk.pipe';
import { GtFilterPipe } from './pipes/gt-filter.pipe';
import { GtOrderByPipe } from './pipes/gt-order-by.pipe';
import { GtExpandingRowComponent } from './components/gt-expanding-row.component';
import { GtSearchPipe } from './pipes/gt-search.pipe';
import { ComponentAnchorDirective } from './directives/component-anchor.directive';
import { GtPaginationComponent, PaginationPipe } from './components/gt-pagination.component';
import { GtTableInfoComponent, TableInfoPipe } from './components/gt-table-info.component';
import { GtCustomComponentFactory } from './components/gt-custom-component-factory';
import { GtMetaPipe } from './pipes/gt-meta.pipe';
import { GtDropdownComponent } from './components/gt-dropdown.component';
import { GtTotalsPipe } from './pipes/gt-totals.pipe';
import { GtTotalsPositionPipe } from './pipes/gt-totals-position.pipe';
import { GtRowClassPipe } from './pipes/gt-row-class.pipe';
import { GtColumnClassPipe } from './pipes/gt-column-class.pipe';
import { GtColumnWidthDirective } from './directives/gt-column-width.directive';
import { GtDrilldownComponent } from './components/gt-drilldown.component';
import { GtCheckboxComponent } from './components/gt-checkbox/gt-checkbox.component';
import { GtHighlightPipe } from './pipes/gt-highlight.pipe';
import { GtIsObservablePipe } from './pipes/gt-is-observable.pipe';
import { GtIsEditablePipe } from './pipes/gt-is-editable.pipe';
var GenericTableModule = /** @class */ (function () {
    function GenericTableModule() {
    }
    GenericTableModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ComponentAnchorDirective,
                        GenericTableComponent,
                        GtPaginationComponent,
                        GtVisiblePipe,
                        GtRenderPipe,
                        DashCasePipe,
                        GtPropertyPipe,
                        GtChunkPipe,
                        GtFilterPipe,
                        GtOrderByPipe,
                        GtExpandingRowComponent,
                        GtCustomComponentFactory,
                        GtSearchPipe,
                        PaginationPipe,
                        GtTableInfoComponent,
                        TableInfoPipe,
                        GtMetaPipe,
                        GtTotalsPipe,
                        GtTotalsPositionPipe,
                        GtRowClassPipe,
                        GtColumnClassPipe,
                        GtHighlightPipe,
                        GtIsObservablePipe,
                        GtIsEditablePipe,
                        GtDropdownComponent,
                        GtColumnWidthDirective,
                        GtDrilldownComponent,
                        GtCheckboxComponent
                    ],
                    imports: [CommonModule, FormsModule],
                    exports: [
                        GenericTableComponent,
                        GtPaginationComponent,
                        GtTableInfoComponent,
                        GtPropertyPipe,
                        GtHighlightPipe,
                        GtExpandingRowComponent,
                        GtDropdownComponent,
                        GtDrilldownComponent,
                        GtCheckboxComponent
                    ],
                    entryComponents: [GtDrilldownComponent, GtCheckboxComponent],
                    providers: [GtMetaPipe, GtHighlightPipe],
                    bootstrap: []
                },] },
    ];
    return GenericTableModule;
}());
export { GenericTableModule };
function GenericTableModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GenericTableModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GenericTableModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1nZW5lcmljLXRhYmxlL2NvcmUvIiwic291cmNlcyI6WyJjb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbkYsT0FBTyxFQUNOLHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5QyxPQUFPLEVBQ04sb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixNQUFNLHNDQUFzQyxDQUFDO0FBQzlDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7Ozs7Z0JBRTlELFFBQVEsU0FBQztvQkFDVCxZQUFZLEVBQUU7d0JBQ2Isd0JBQXdCO3dCQUN4QixxQkFBcUI7d0JBQ3JCLHFCQUFxQjt3QkFDckIsYUFBYTt3QkFDYixZQUFZO3dCQUNaLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxXQUFXO3dCQUNYLFlBQVk7d0JBQ1osYUFBYTt3QkFDYix1QkFBdUI7d0JBQ3ZCLHdCQUF3Qjt3QkFDeEIsWUFBWTt3QkFDWixjQUFjO3dCQUNkLG9CQUFvQjt3QkFDcEIsYUFBYTt3QkFDYixVQUFVO3dCQUNWLFlBQVk7d0JBQ1osb0JBQW9CO3dCQUNwQixjQUFjO3dCQUNkLGlCQUFpQjt3QkFDakIsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLGdCQUFnQjt3QkFDaEIsbUJBQW1CO3dCQUNuQixzQkFBc0I7d0JBQ3RCLG9CQUFvQjt3QkFDcEIsbUJBQW1CO3FCQUNuQjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDO29CQUNwQyxPQUFPLEVBQUU7d0JBQ1IscUJBQXFCO3dCQUNyQixxQkFBcUI7d0JBQ3JCLG9CQUFvQjt3QkFDcEIsY0FBYzt3QkFDZCxlQUFlO3dCQUNmLHVCQUF1Qjt3QkFDdkIsbUJBQW1CO3dCQUNuQixvQkFBb0I7d0JBQ3BCLG1CQUFtQjtxQkFDbkI7b0JBQ0QsZUFBZSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsbUJBQW1CLENBQUM7b0JBQzVELFNBQVMsRUFBRSxDQUFDLFVBQVUsRUFBRSxlQUFlLENBQUM7b0JBQ3hDLFNBQVMsRUFBRSxFQUFFO2lCQUNiOzs2QkFsRkQ7O1NBbUZhLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBHZW5lcmljVGFibGVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZ2VuZXJpYy10YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3RSZW5kZXJQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1yZW5kZXIucGlwZSc7XG5pbXBvcnQgeyBHdFZpc2libGVQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC12aXNpYmxlLnBpcGUnO1xuaW1wb3J0IHsgRGFzaENhc2VQaXBlIH0gZnJvbSAnLi9waXBlcy9kYXNoLWNhc2UucGlwZSc7XG5pbXBvcnQgeyBHdFByb3BlcnR5UGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtcHJvcGVydHkucGlwZSc7XG5pbXBvcnQgeyBHdENodW5rUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtY2h1bmsucGlwZSc7XG5pbXBvcnQgeyBHdEZpbHRlclBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LWZpbHRlci5waXBlJztcbmltcG9ydCB7IEd0T3JkZXJCeVBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LW9yZGVyLWJ5LnBpcGUnO1xuaW1wb3J0IHsgR3RFeHBhbmRpbmdSb3dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZ3QtZXhwYW5kaW5nLXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3RTZWFyY2hQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1zZWFyY2gucGlwZSc7XG5pbXBvcnQgeyBDb21wb25lbnRBbmNob3JEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY29tcG9uZW50LWFuY2hvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHtcblx0R3RQYWdpbmF0aW9uQ29tcG9uZW50LFxuXHRQYWdpbmF0aW9uUGlwZVxufSBmcm9tICcuL2NvbXBvbmVudHMvZ3QtcGFnaW5hdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHtcblx0R3RUYWJsZUluZm9Db21wb25lbnQsXG5cdFRhYmxlSW5mb1BpcGVcbn0gZnJvbSAnLi9jb21wb25lbnRzL2d0LXRhYmxlLWluZm8uY29tcG9uZW50JztcbmltcG9ydCB7IEd0Q3VzdG9tQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gJy4vY29tcG9uZW50cy9ndC1jdXN0b20tY29tcG9uZW50LWZhY3RvcnknO1xuaW1wb3J0IHsgR3RNZXRhUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtbWV0YS5waXBlJztcbmltcG9ydCB7IEd0RHJvcGRvd25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZ3QtZHJvcGRvd24uY29tcG9uZW50JztcbmltcG9ydCB7IEd0VG90YWxzUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtdG90YWxzLnBpcGUnO1xuaW1wb3J0IHsgR3RUb3RhbHNQb3NpdGlvblBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LXRvdGFscy1wb3NpdGlvbi5waXBlJztcbmltcG9ydCB7IEd0Um93Q2xhc3NQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1yb3ctY2xhc3MucGlwZSc7XG5pbXBvcnQgeyBHdENvbHVtbkNsYXNzUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtY29sdW1uLWNsYXNzLnBpcGUnO1xuaW1wb3J0IHsgR3RDb2x1bW5XaWR0aERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9ndC1jb2x1bW4td2lkdGguZGlyZWN0aXZlJztcbmltcG9ydCB7IEd0RHJpbGxkb3duQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2d0LWRyaWxsZG93bi5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3RDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9ndC1jaGVja2JveC9ndC1jaGVja2JveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3RIaWdobGlnaHRQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1oaWdobGlnaHQucGlwZSc7XG5pbXBvcnQgeyBHdElzT2JzZXJ2YWJsZVBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LWlzLW9ic2VydmFibGUucGlwZSc7XG5pbXBvcnQgeyBHdElzRWRpdGFibGVQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1pcy1lZGl0YWJsZS5waXBlJztcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbXG5cdFx0Q29tcG9uZW50QW5jaG9yRGlyZWN0aXZlLFxuXHRcdEdlbmVyaWNUYWJsZUNvbXBvbmVudCxcblx0XHRHdFBhZ2luYXRpb25Db21wb25lbnQsXG5cdFx0R3RWaXNpYmxlUGlwZSxcblx0XHRHdFJlbmRlclBpcGUsXG5cdFx0RGFzaENhc2VQaXBlLFxuXHRcdEd0UHJvcGVydHlQaXBlLFxuXHRcdEd0Q2h1bmtQaXBlLFxuXHRcdEd0RmlsdGVyUGlwZSxcblx0XHRHdE9yZGVyQnlQaXBlLFxuXHRcdEd0RXhwYW5kaW5nUm93Q29tcG9uZW50LFxuXHRcdEd0Q3VzdG9tQ29tcG9uZW50RmFjdG9yeSxcblx0XHRHdFNlYXJjaFBpcGUsXG5cdFx0UGFnaW5hdGlvblBpcGUsXG5cdFx0R3RUYWJsZUluZm9Db21wb25lbnQsXG5cdFx0VGFibGVJbmZvUGlwZSxcblx0XHRHdE1ldGFQaXBlLFxuXHRcdEd0VG90YWxzUGlwZSxcblx0XHRHdFRvdGFsc1Bvc2l0aW9uUGlwZSxcblx0XHRHdFJvd0NsYXNzUGlwZSxcblx0XHRHdENvbHVtbkNsYXNzUGlwZSxcblx0XHRHdEhpZ2hsaWdodFBpcGUsXG5cdFx0R3RJc09ic2VydmFibGVQaXBlLFxuXHRcdEd0SXNFZGl0YWJsZVBpcGUsXG5cdFx0R3REcm9wZG93bkNvbXBvbmVudCxcblx0XHRHdENvbHVtbldpZHRoRGlyZWN0aXZlLFxuXHRcdEd0RHJpbGxkb3duQ29tcG9uZW50LFxuXHRcdEd0Q2hlY2tib3hDb21wb25lbnRcblx0XSxcblx0aW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGVdLFxuXHRleHBvcnRzOiBbXG5cdFx0R2VuZXJpY1RhYmxlQ29tcG9uZW50LFxuXHRcdEd0UGFnaW5hdGlvbkNvbXBvbmVudCxcblx0XHRHdFRhYmxlSW5mb0NvbXBvbmVudCxcblx0XHRHdFByb3BlcnR5UGlwZSxcblx0XHRHdEhpZ2hsaWdodFBpcGUsXG5cdFx0R3RFeHBhbmRpbmdSb3dDb21wb25lbnQsXG5cdFx0R3REcm9wZG93bkNvbXBvbmVudCxcblx0XHRHdERyaWxsZG93bkNvbXBvbmVudCxcblx0XHRHdENoZWNrYm94Q29tcG9uZW50XG5cdF0sXG5cdGVudHJ5Q29tcG9uZW50czogW0d0RHJpbGxkb3duQ29tcG9uZW50LCBHdENoZWNrYm94Q29tcG9uZW50XSxcblx0cHJvdmlkZXJzOiBbR3RNZXRhUGlwZSwgR3RIaWdobGlnaHRQaXBlXSxcblx0Ym9vdHN0cmFwOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBHZW5lcmljVGFibGVNb2R1bGUge31cbiJdfQ==