/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
// unsupported: template constraints.
/**
 * @template R
 */
export class GtPropertyPipe {
    /**
     * @param {?} config
     * @param {?} objectKey
     * @param {?} property
     * @param {?=} refresh
     * @return {?}
     */
    transform(config, objectKey, property, refresh) {
        let /** @type {?} */ output = null;
        try {
            for (let /** @type {?} */ i = 0; i < config.length; i++) {
                if (config[i].objectKey === objectKey) {
                    output = config[i][property];
                }
            }
        }
        catch (/** @type {?} */ error) {
            console.log('cannot read property: "' +
                property +
                '" on missing key: "' +
                objectKey +
                '" in config.', error);
        }
        return output;
    }
}
GtPropertyPipe.decorators = [
    { type: Pipe, args: [{
                name: 'gtProperty'
            },] },
];
function GtPropertyPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtPropertyPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtPropertyPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtcHJvcGVydHkucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bhbmd1bGFyLWdlbmVyaWMtdGFibGUvY29yZS8iLCJzb3VyY2VzIjpbInBpcGVzL2d0LXByb3BlcnR5LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7OztBQVFwRCxNQUFNOzs7Ozs7OztJQUNMLFNBQVMsQ0FDUixNQUFtRCxFQUNuRCxTQUFpQixFQUNqQixRQUFnQixFQUNoQixPQUFpQjtRQUVqQixxQkFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQztZQUNKLEdBQUcsQ0FBQyxDQUFDLHFCQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFDeEMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO29CQUN2QyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUM3QjthQUNEO1NBQ0Q7UUFBQyxLQUFLLENBQUMsQ0FBQyxpQkFBQSxLQUFLLEVBQUUsQ0FBQztZQUNoQixPQUFPLENBQUMsR0FBRyxDQUNWLHlCQUF5QjtnQkFDeEIsUUFBUTtnQkFDUixxQkFBcUI7Z0JBQ3JCLFNBQVM7Z0JBQ1QsY0FBYyxFQUNmLEtBQUssQ0FDTCxDQUFDO1NBQ0Y7UUFDRCxNQUFNLENBQUMsTUFBTSxDQUFDO0tBQ2Q7OztZQTVCRCxJQUFJLFNBQUM7Z0JBQ0wsSUFBSSxFQUFFLFlBQVk7YUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHdENvbmZpZ0ZpZWxkIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9ndC1jb25maWctZmllbGQnO1xuaW1wb3J0IHsgR3RDb25maWdTZXR0aW5nIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9ndC1jb25maWctc2V0dGluZyc7XG5pbXBvcnQgeyBHdFJvdyB9IGZyb20gJy4uL2ludGVyZmFjZXMvZ3Qtcm93JztcblxuQFBpcGUoe1xuXHRuYW1lOiAnZ3RQcm9wZXJ0eSdcbn0pXG5leHBvcnQgY2xhc3MgR3RQcm9wZXJ0eVBpcGU8UiBleHRlbmRzIEd0Um93PiBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXHR0cmFuc2Zvcm0oXG5cdFx0Y29uZmlnOiBHdENvbmZpZ0ZpZWxkPFIsIGFueT5bXSB8IEd0Q29uZmlnU2V0dGluZ1tdLFxuXHRcdG9iamVjdEtleTogc3RyaW5nLFxuXHRcdHByb3BlcnR5OiBzdHJpbmcsXG5cdFx0cmVmcmVzaD86IGJvb2xlYW5cblx0KTogYW55IHtcblx0XHRsZXQgb3V0cHV0ID0gbnVsbDtcblx0XHR0cnkge1xuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjb25maWcubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKGNvbmZpZ1tpXS5vYmplY3RLZXkgPT09IG9iamVjdEtleSkge1xuXHRcdFx0XHRcdG91dHB1dCA9IGNvbmZpZ1tpXVtwcm9wZXJ0eV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdCdjYW5ub3QgcmVhZCBwcm9wZXJ0eTogXCInICtcblx0XHRcdFx0XHRwcm9wZXJ0eSArXG5cdFx0XHRcdFx0J1wiIG9uIG1pc3Npbmcga2V5OiBcIicgK1xuXHRcdFx0XHRcdG9iamVjdEtleSArXG5cdFx0XHRcdFx0J1wiIGluIGNvbmZpZy4nLFxuXHRcdFx0XHRlcnJvclxuXHRcdFx0KTtcblx0XHR9XG5cdFx0cmV0dXJuIG91dHB1dDtcblx0fVxufVxuIl19