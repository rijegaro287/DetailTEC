/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
export class GtMetaPipe {
    /**
     * @param {?} allRows
     * @param {?=} rowIndex
     * @param {?=} page
     * @param {?=} recordLength
     * @return {?}
     */
    transform(allRows, rowIndex, page, recordLength) {
        for (let /** @type {?} */ i = 0; i < allRows.length; i++) {
            if (!allRows[i].$$gtRowId) {
                allRows[i].$$gtRowId = rowIndex
                    ? allRows[i][rowIndex]
                    : page
                        ? page * recordLength +
                            i +
                            '_' +
                            Math.random()
                                .toString(36)
                                .substr(2, 16)
                        : i +
                            '_' +
                            Math.random()
                                .toString(36)
                                .substr(2, 16);
            }
            if (!allRows[i].$$gtInitialRowIndex) {
                allRows[i].$$gtInitialRowIndex = i;
            }
        }
        return allRows;
    }
}
GtMetaPipe.decorators = [
    { type: Pipe, args: [{
                name: 'gtMeta'
            },] },
];
function GtMetaPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtMetaPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtMetaPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtbWV0YS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFuZ3VsYXItZ2VuZXJpYy10YWJsZS9jb3JlLyIsInNvdXJjZXMiOlsicGlwZXMvZ3QtbWV0YS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQU9wRCxNQUFNOzs7Ozs7OztJQUNMLFNBQVMsQ0FDUixPQUFxQixFQUNyQixRQUFpQixFQUNqQixJQUFhLEVBQ2IsWUFBcUI7UUFFckIsR0FBRyxDQUFDLENBQUMscUJBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ3pDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsUUFBUTtvQkFDOUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7b0JBQ3RCLENBQUMsQ0FBQyxJQUFJO3dCQUNMLENBQUMsQ0FBQyxJQUFJLEdBQUcsWUFBWTs0QkFDbkIsQ0FBQzs0QkFDRCxHQUFHOzRCQUNILElBQUksQ0FBQyxNQUFNLEVBQUU7aUNBQ1osUUFBUSxDQUFDLEVBQUUsQ0FBQztpQ0FDWixNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQzt3QkFDaEIsQ0FBQyxDQUFDLENBQUM7NEJBQ0QsR0FBRzs0QkFDSCxJQUFJLENBQUMsTUFBTSxFQUFFO2lDQUNaLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUNBQ1osTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQzthQUNuQjtZQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztnQkFDckMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixHQUFHLENBQUMsQ0FBQzthQUNuQztTQUNEO1FBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQztLQUNmOzs7WUFoQ0QsSUFBSSxTQUFDO2dCQUNMLElBQUksRUFBRSxRQUFRO2FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHdFJvdyB9IGZyb20gJy4uL2ludGVyZmFjZXMvZ3Qtcm93JztcbmltcG9ydCB7IEd0Um93TWV0YSB9IGZyb20gJy4uL2ludGVyZmFjZXMvZ3Qtcm93LW1ldGEnO1xuXG5AUGlwZSh7XG5cdG5hbWU6ICdndE1ldGEnXG59KVxuZXhwb3J0IGNsYXNzIEd0TWV0YVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0dHJhbnNmb3JtKFxuXHRcdGFsbFJvd3M6IEFycmF5PEd0Um93Pixcblx0XHRyb3dJbmRleD86IHN0cmluZyxcblx0XHRwYWdlPzogbnVtYmVyLFxuXHRcdHJlY29yZExlbmd0aD86IG51bWJlclxuXHQpOiBBcnJheTxHdFJvdz4ge1xuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgYWxsUm93cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKCFhbGxSb3dzW2ldLiQkZ3RSb3dJZCkge1xuXHRcdFx0XHRhbGxSb3dzW2ldLiQkZ3RSb3dJZCA9IHJvd0luZGV4XG5cdFx0XHRcdFx0PyBhbGxSb3dzW2ldW3Jvd0luZGV4XVxuXHRcdFx0XHRcdDogcGFnZVxuXHRcdFx0XHRcdFx0PyBwYWdlICogcmVjb3JkTGVuZ3RoICtcblx0XHRcdFx0XHRcdCAgaSArXG5cdFx0XHRcdFx0XHQgICdfJyArXG5cdFx0XHRcdFx0XHQgIE1hdGgucmFuZG9tKClcblx0XHRcdFx0XHRcdFx0XHQudG9TdHJpbmcoMzYpXG5cdFx0XHRcdFx0XHRcdFx0LnN1YnN0cigyLCAxNilcblx0XHRcdFx0XHRcdDogaSArXG5cdFx0XHRcdFx0XHQgICdfJyArXG5cdFx0XHRcdFx0XHQgIE1hdGgucmFuZG9tKClcblx0XHRcdFx0XHRcdFx0XHQudG9TdHJpbmcoMzYpXG5cdFx0XHRcdFx0XHRcdFx0LnN1YnN0cigyLCAxNik7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIWFsbFJvd3NbaV0uJCRndEluaXRpYWxSb3dJbmRleCkge1xuXHRcdFx0XHRhbGxSb3dzW2ldLiQkZ3RJbml0aWFsUm93SW5kZXggPSBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gYWxsUm93cztcblx0fVxufVxuIl19