/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { GenericTableComponent } from './components/generic-table.component';
import { GtRenderPipe } from './pipes/gt-render.pipe';
import { GtVisiblePipe } from './pipes/gt-visible.pipe';
import { DashCasePipe } from './pipes/dash-case.pipe';
import { GtPropertyPipe } from './pipes/gt-property.pipe';
import { GtChunkPipe } from './pipes/gt-chunk.pipe';
import { GtFilterPipe } from './pipes/gt-filter.pipe';
import { GtOrderByPipe } from './pipes/gt-order-by.pipe';
import { GtExpandingRowComponent } from './components/gt-expanding-row.component';
import { GtSearchPipe } from './pipes/gt-search.pipe';
import { ComponentAnchorDirective } from './directives/component-anchor.directive';
import { GtPaginationComponent, PaginationPipe } from './components/gt-pagination.component';
import { GtTableInfoComponent, TableInfoPipe } from './components/gt-table-info.component';
import { GtCustomComponentFactory } from './components/gt-custom-component-factory';
import { GtMetaPipe } from './pipes/gt-meta.pipe';
import { GtDropdownComponent } from './components/gt-dropdown.component';
import { GtTotalsPipe } from './pipes/gt-totals.pipe';
import { GtTotalsPositionPipe } from './pipes/gt-totals-position.pipe';
import { GtRowClassPipe } from './pipes/gt-row-class.pipe';
import { GtColumnClassPipe } from './pipes/gt-column-class.pipe';
import { GtColumnWidthDirective } from './directives/gt-column-width.directive';
import { GtDrilldownComponent } from './components/gt-drilldown.component';
import { GtCheckboxComponent } from './components/gt-checkbox/gt-checkbox.component';
import { GtHighlightPipe } from './pipes/gt-highlight.pipe';
import { GtIsObservablePipe } from './pipes/gt-is-observable.pipe';
import { GtIsEditablePipe } from './pipes/gt-is-editable.pipe';
export class GenericTableModule {
}
GenericTableModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ComponentAnchorDirective,
                    GenericTableComponent,
                    GtPaginationComponent,
                    GtVisiblePipe,
                    GtRenderPipe,
                    DashCasePipe,
                    GtPropertyPipe,
                    GtChunkPipe,
                    GtFilterPipe,
                    GtOrderByPipe,
                    GtExpandingRowComponent,
                    GtCustomComponentFactory,
                    GtSearchPipe,
                    PaginationPipe,
                    GtTableInfoComponent,
                    TableInfoPipe,
                    GtMetaPipe,
                    GtTotalsPipe,
                    GtTotalsPositionPipe,
                    GtRowClassPipe,
                    GtColumnClassPipe,
                    GtHighlightPipe,
                    GtIsObservablePipe,
                    GtIsEditablePipe,
                    GtDropdownComponent,
                    GtColumnWidthDirective,
                    GtDrilldownComponent,
                    GtCheckboxComponent
                ],
                imports: [CommonModule, FormsModule],
                exports: [
                    GenericTableComponent,
                    GtPaginationComponent,
                    GtTableInfoComponent,
                    GtPropertyPipe,
                    GtHighlightPipe,
                    GtExpandingRowComponent,
                    GtDropdownComponent,
                    GtDrilldownComponent,
                    GtCheckboxComponent
                ],
                entryComponents: [GtDrilldownComponent, GtCheckboxComponent],
                providers: [GtMetaPipe, GtHighlightPipe],
                bootstrap: []
            },] },
];
function GenericTableModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GenericTableModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GenericTableModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1nZW5lcmljLXRhYmxlL2NvcmUvIiwic291cmNlcyI6WyJjb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbkYsT0FBTyxFQUNOLHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5QyxPQUFPLEVBQ04sb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixNQUFNLHNDQUFzQyxDQUFDO0FBQzlDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQWlEL0QsTUFBTTs7O1lBL0NMLFFBQVEsU0FBQztnQkFDVCxZQUFZLEVBQUU7b0JBQ2Isd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLHFCQUFxQjtvQkFDckIsYUFBYTtvQkFDYixZQUFZO29CQUNaLFlBQVk7b0JBQ1osY0FBYztvQkFDZCxXQUFXO29CQUNYLFlBQVk7b0JBQ1osYUFBYTtvQkFDYix1QkFBdUI7b0JBQ3ZCLHdCQUF3QjtvQkFDeEIsWUFBWTtvQkFDWixjQUFjO29CQUNkLG9CQUFvQjtvQkFDcEIsYUFBYTtvQkFDYixVQUFVO29CQUNWLFlBQVk7b0JBQ1osb0JBQW9CO29CQUNwQixjQUFjO29CQUNkLGlCQUFpQjtvQkFDakIsZUFBZTtvQkFDZixrQkFBa0I7b0JBQ2xCLGdCQUFnQjtvQkFDaEIsbUJBQW1CO29CQUNuQixzQkFBc0I7b0JBQ3RCLG9CQUFvQjtvQkFDcEIsbUJBQW1CO2lCQUNuQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDO2dCQUNwQyxPQUFPLEVBQUU7b0JBQ1IscUJBQXFCO29CQUNyQixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIsY0FBYztvQkFDZCxlQUFlO29CQUNmLHVCQUF1QjtvQkFDdkIsbUJBQW1CO29CQUNuQixvQkFBb0I7b0JBQ3BCLG1CQUFtQjtpQkFDbkI7Z0JBQ0QsZUFBZSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsbUJBQW1CLENBQUM7Z0JBQzVELFNBQVMsRUFBRSxDQUFDLFVBQVUsRUFBRSxlQUFlLENBQUM7Z0JBQ3hDLFNBQVMsRUFBRSxFQUFFO2FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgR2VuZXJpY1RhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2dlbmVyaWMtdGFibGUuY29tcG9uZW50JztcbmltcG9ydCB7IEd0UmVuZGVyUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtcmVuZGVyLnBpcGUnO1xuaW1wb3J0IHsgR3RWaXNpYmxlUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtdmlzaWJsZS5waXBlJztcbmltcG9ydCB7IERhc2hDYXNlUGlwZSB9IGZyb20gJy4vcGlwZXMvZGFzaC1jYXNlLnBpcGUnO1xuaW1wb3J0IHsgR3RQcm9wZXJ0eVBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LXByb3BlcnR5LnBpcGUnO1xuaW1wb3J0IHsgR3RDaHVua1BpcGUgfSBmcm9tICcuL3BpcGVzL2d0LWNodW5rLnBpcGUnO1xuaW1wb3J0IHsgR3RGaWx0ZXJQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1maWx0ZXIucGlwZSc7XG5pbXBvcnQgeyBHdE9yZGVyQnlQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1vcmRlci1ieS5waXBlJztcbmltcG9ydCB7IEd0RXhwYW5kaW5nUm93Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2d0LWV4cGFuZGluZy1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IEd0U2VhcmNoUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3Qtc2VhcmNoLnBpcGUnO1xuaW1wb3J0IHsgQ29tcG9uZW50QW5jaG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NvbXBvbmVudC1hbmNob3IuZGlyZWN0aXZlJztcbmltcG9ydCB7XG5cdEd0UGFnaW5hdGlvbkNvbXBvbmVudCxcblx0UGFnaW5hdGlvblBpcGVcbn0gZnJvbSAnLi9jb21wb25lbnRzL2d0LXBhZ2luYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7XG5cdEd0VGFibGVJbmZvQ29tcG9uZW50LFxuXHRUYWJsZUluZm9QaXBlXG59IGZyb20gJy4vY29tcG9uZW50cy9ndC10YWJsZS1pbmZvLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHdEN1c3RvbUNvbXBvbmVudEZhY3RvcnkgfSBmcm9tICcuL2NvbXBvbmVudHMvZ3QtY3VzdG9tLWNvbXBvbmVudC1mYWN0b3J5JztcbmltcG9ydCB7IEd0TWV0YVBpcGUgfSBmcm9tICcuL3BpcGVzL2d0LW1ldGEucGlwZSc7XG5pbXBvcnQgeyBHdERyb3Bkb3duQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2d0LWRyb3Bkb3duLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHdFRvdGFsc1BpcGUgfSBmcm9tICcuL3BpcGVzL2d0LXRvdGFscy5waXBlJztcbmltcG9ydCB7IEd0VG90YWxzUG9zaXRpb25QaXBlIH0gZnJvbSAnLi9waXBlcy9ndC10b3RhbHMtcG9zaXRpb24ucGlwZSc7XG5pbXBvcnQgeyBHdFJvd0NsYXNzUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3Qtcm93LWNsYXNzLnBpcGUnO1xuaW1wb3J0IHsgR3RDb2x1bW5DbGFzc1BpcGUgfSBmcm9tICcuL3BpcGVzL2d0LWNvbHVtbi1jbGFzcy5waXBlJztcbmltcG9ydCB7IEd0Q29sdW1uV2lkdGhEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZ3QtY29sdW1uLXdpZHRoLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHdERyaWxsZG93bkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9ndC1kcmlsbGRvd24uY29tcG9uZW50JztcbmltcG9ydCB7IEd0Q2hlY2tib3hDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZ3QtY2hlY2tib3gvZ3QtY2hlY2tib3guY29tcG9uZW50JztcbmltcG9ydCB7IEd0SGlnaGxpZ2h0UGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtaGlnaGxpZ2h0LnBpcGUnO1xuaW1wb3J0IHsgR3RJc09ic2VydmFibGVQaXBlIH0gZnJvbSAnLi9waXBlcy9ndC1pcy1vYnNlcnZhYmxlLnBpcGUnO1xuaW1wb3J0IHsgR3RJc0VkaXRhYmxlUGlwZSB9IGZyb20gJy4vcGlwZXMvZ3QtaXMtZWRpdGFibGUucGlwZSc7XG5cbkBOZ01vZHVsZSh7XG5cdGRlY2xhcmF0aW9uczogW1xuXHRcdENvbXBvbmVudEFuY2hvckRpcmVjdGl2ZSxcblx0XHRHZW5lcmljVGFibGVDb21wb25lbnQsXG5cdFx0R3RQYWdpbmF0aW9uQ29tcG9uZW50LFxuXHRcdEd0VmlzaWJsZVBpcGUsXG5cdFx0R3RSZW5kZXJQaXBlLFxuXHRcdERhc2hDYXNlUGlwZSxcblx0XHRHdFByb3BlcnR5UGlwZSxcblx0XHRHdENodW5rUGlwZSxcblx0XHRHdEZpbHRlclBpcGUsXG5cdFx0R3RPcmRlckJ5UGlwZSxcblx0XHRHdEV4cGFuZGluZ1Jvd0NvbXBvbmVudCxcblx0XHRHdEN1c3RvbUNvbXBvbmVudEZhY3RvcnksXG5cdFx0R3RTZWFyY2hQaXBlLFxuXHRcdFBhZ2luYXRpb25QaXBlLFxuXHRcdEd0VGFibGVJbmZvQ29tcG9uZW50LFxuXHRcdFRhYmxlSW5mb1BpcGUsXG5cdFx0R3RNZXRhUGlwZSxcblx0XHRHdFRvdGFsc1BpcGUsXG5cdFx0R3RUb3RhbHNQb3NpdGlvblBpcGUsXG5cdFx0R3RSb3dDbGFzc1BpcGUsXG5cdFx0R3RDb2x1bW5DbGFzc1BpcGUsXG5cdFx0R3RIaWdobGlnaHRQaXBlLFxuXHRcdEd0SXNPYnNlcnZhYmxlUGlwZSxcblx0XHRHdElzRWRpdGFibGVQaXBlLFxuXHRcdEd0RHJvcGRvd25Db21wb25lbnQsXG5cdFx0R3RDb2x1bW5XaWR0aERpcmVjdGl2ZSxcblx0XHRHdERyaWxsZG93bkNvbXBvbmVudCxcblx0XHRHdENoZWNrYm94Q29tcG9uZW50XG5cdF0sXG5cdGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlXSxcblx0ZXhwb3J0czogW1xuXHRcdEdlbmVyaWNUYWJsZUNvbXBvbmVudCxcblx0XHRHdFBhZ2luYXRpb25Db21wb25lbnQsXG5cdFx0R3RUYWJsZUluZm9Db21wb25lbnQsXG5cdFx0R3RQcm9wZXJ0eVBpcGUsXG5cdFx0R3RIaWdobGlnaHRQaXBlLFxuXHRcdEd0RXhwYW5kaW5nUm93Q29tcG9uZW50LFxuXHRcdEd0RHJvcGRvd25Db21wb25lbnQsXG5cdFx0R3REcmlsbGRvd25Db21wb25lbnQsXG5cdFx0R3RDaGVja2JveENvbXBvbmVudFxuXHRdLFxuXHRlbnRyeUNvbXBvbmVudHM6IFtHdERyaWxsZG93bkNvbXBvbmVudCwgR3RDaGVja2JveENvbXBvbmVudF0sXG5cdHByb3ZpZGVyczogW0d0TWV0YVBpcGUsIEd0SGlnaGxpZ2h0UGlwZV0sXG5cdGJvb3RzdHJhcDogW11cbn0pXG5leHBvcnQgY2xhc3MgR2VuZXJpY1RhYmxlTW9kdWxlIHt9XG4iXX0=